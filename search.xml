<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>分割数组的最大值</title>
      <link href="/2019/09/12/splitArray/"/>
      <url>/2019/09/12/splitArray/</url>
      
        <content type="html"><![CDATA[<p>分割数组的最大值，将一个数组分割成n个连续的子数组，使每个子数组的最大值最小。<br><a id="more"></a></p><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>在m个节点的分布式计算系统中，有一批任务需要执行，每个任务需要的时间式array[i]，每个节点同一时间只能执行一个任务，每个节点只能执行连续的任务，例如i，i+1，i+2，但是不能执行i，i+2。请问任务完成的最短时间<br><strong>输入</strong><br><code>输入数据包含两行</code><br><code>第一行，空格分割的两个整数m和n，分布表示节点个数和任务个数(m&gt;0,n&gt;=0)</code><br><code>第二行，空格分割的正整数序列，表示每个任务需要的时间</code><br><strong>输出</strong><br><code>一个整数，表示最短完成时间</code><br><strong>样例输入</strong><br><code>3 5</code><br><code>1 5 3 4 2</code><br><strong>样例输入</strong><br><code>6</code><br><strong>提示</strong><br><code>第一个节点执行：任务1和任务2，耗时=1+5=6</code><br><code>第二个节点执行：任务3，耗时=3</code><br><code>第三个节点执行：任务4和任务5，耗时=2+4=6</code></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>将一个数组分割成n个连续的子数组，使每个子数组的最大值最小。（同leecode 410）</p><h2 id="解法一、-二分法"><a href="#解法一、-二分法" class="headerlink" title="解法一、  二分法"></a>解法一、  二分法</h2><p>1.给出一个完成任务的时间x，然后将任务分成每个子节点任务时间&lt;=x，如果完成任务需要的节点数&lt;=给出的节点数，那么满足条件。用来判断是否满足条件的过程可以用暴力方法求解。<br>2.给出时间x可以从完成任务的平均时间开始不断+1，找到第一个满足条件的x，就是完成任务最短时间。或者使用二分法 sum/m&lt;=x&lt;=sum，不断二分计算中间值，可以减少时间复杂度。<br><strong>源码</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class test3 &#123;</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        int nodeNum=sc.nextInt();</span><br><span class="line">        int taskNum=sc.nextInt();</span><br><span class="line">        int time[] = new int[taskNum];</span><br><span class="line">        int sum=0;</span><br><span class="line">        for(int i=0;i&lt;taskNum;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        time[i]=sc.nextInt();</span><br><span class="line">        &#125; </span><br><span class="line">        System.out.println(splitArray(time,nodeNum));</span><br><span class="line">    &#125;</span><br><span class="line">//二分法划分，每次给出一个时长x，判断是否满足条件</span><br><span class="line">public static int splitArray(int[] nums, int m) &#123;</span><br><span class="line">int sum=0;</span><br><span class="line">for(int i=0;i&lt;nums.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        sum+=nums[i];</span><br><span class="line">        &#125; </span><br><span class="line">int low=sum/m;</span><br><span class="line">int high=sum;</span><br><span class="line">int result=low;</span><br><span class="line">while(low&lt;=high)</span><br><span class="line">&#123;</span><br><span class="line">int mid=(low+high)/2;</span><br><span class="line">if(isFit(nums,mid,m))</span><br><span class="line">&#123;</span><br><span class="line">if(isFit(nums,low,m)) &#123;</span><br><span class="line">result=low;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">low+=1;</span><br><span class="line">high=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">low=mid+1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        for(int i=0;i&lt;nums.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        if(result&lt;nums[i])</span><br><span class="line">        result=nums[i];</span><br><span class="line">        &#125; </span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//暴力求解当前时长是否满足条件</span><br><span class="line">private static Boolean isFit(int time[],int maxsumtime,int nodeNum)</span><br><span class="line">&#123;</span><br><span class="line">int count=0,sum=0;</span><br><span class="line">for(int i=0;i&lt;time.length;i++)</span><br><span class="line">&#123;</span><br><span class="line">sum+=time[i];</span><br><span class="line">if(i+1&lt;time.length-1)</span><br><span class="line">&#123;</span><br><span class="line">if(sum&lt;=maxsumtime&amp;&amp;(sum+time[i+1])&gt;maxsumtime)</span><br><span class="line">&#123;</span><br><span class="line">count++;</span><br><span class="line">sum=0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">if(sum&lt;=maxsumtime&amp;&amp;(sum+time[i+1])&gt;maxsumtime)</span><br><span class="line">&#123;</span><br><span class="line">count=count+2;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">count+=1;</span><br><span class="line">&#125;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.print(&quot;count:&quot;+count);</span><br><span class="line">System.out.println(&quot; maxsumtime:&quot;+maxsumtime);</span><br><span class="line">if(count&gt;nodeNum)</span><br><span class="line">return false;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>结果</strong><br>第一行是使用二分的结果，第二行是顺序查找的结果<br><img src="//blog.zhengmingz.top/2019/09/12/splitArray/result1.png" alt="result1"></p><h2 id="解法二、-动态规划"><a href="#解法二、-动态规划" class="headerlink" title="解法二、  动态规划"></a>解法二、  动态规划</h2>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
            <tag> 二分法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wpf加载gif</title>
      <link href="/2019/09/09/wpfgif/"/>
      <url>/2019/09/09/wpfgif/</url>
      
        <content type="html"><![CDATA[<p>wpf加载gif显示问题<br><a id="more"></a><br>wpf 程序需要动态显示gif图片，试过MediaElement、Image  以及winform 的 pictureBox，要不图片显示不出来，要不显示出来不动，亲测以下方法可用。</p><ol><li>打开vs 工具-&gt;库程序包管理工具-&gt;程序包管理器控制台</li><li>PM&gt;Install-Package WpfAnimatedGif </li><li>要使用这个包需要加入新的命名空间<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=&quot;Meeting.MainWindow&quot;</span><br><span class="line">        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><br><span class="line">        xmlns:gif=&quot;http://wpfanimatedgif.codeplex.com&quot; </span><br><span class="line">        Icon=&quot;/images/icon.ico&quot;</span><br><span class="line">        Title=&quot; MainWindows&quot;  Height=&quot;610&quot; Width=&quot;900&quot;  &gt;</span><br><span class="line">      &lt;Grid&gt;</span><br><span class="line">          &lt;Image gif:ImageBehavior.AnimatedSource=&quot;Images/animated.gif&quot; /&gt;</span><br><span class="line">      &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> c# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wpf </tag>
            
            <tag> gif </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tmux+vim+zsh 配置</title>
      <link href="/2019/09/09/ZshTmuxVim/"/>
      <url>/2019/09/09/ZshTmuxVim/</url>
      
        <content type="html"><![CDATA[<p>tmux、vim、zsh等shell工具的配置与使用<br><a id="more"></a></p><h2 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h2><p><a href="http://man.openbsd.org/OpenBSD-current/man1/tmux.1" target="_blank" rel="noopener">官方手册</a><br><a href="https://pragprog.com/book/bhtmux2/tmux-2" target="_blank" rel="noopener">电子数</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code>sudo apt-get install tmux</code><br><strong>Session 命令</strong><br>启动新会话： tmux new -s 会话名  -n  窗口名<br>恢复会话： tmux a  -t  会话名<br>列出所有会话：tmux  ls<br>关闭会话：tmux  kill-session  -t  会话名<br>关闭所有会话：<br>tmux ls | grep : | cut -d. -f1 | awk ‘{print substr($1, 0, length($1)-1)}’ | xargs kill<br>脱离会话： Ctrl+b，d<br>重新附加会话：  tmux  attach-session<br>列出会话：tmux list-sessions<br>重命名会话：tmux  rename -t  oldname  newname<br>Ctrl+b，：  可以不用退出，直接在下方输入命令（如： new -s  会话名）<br>Ctrl+b，s    可以显示所有的session，并切换<br><strong>Window 命令</strong><br>Ctrl+b，c  新建窗口<br>Ctrl+b，p 移动到上一个窗口<br>Ctrl+b，n  移动到下一个窗口<br>Ctrl+b, w  通过窗口列表切换窗口<br>退出所有panel，window也关闭<br><strong>Panel 命令</strong><br>Ctrl+b，箭头    选择操作不同的窗格<br>Ctrl+b，”     水平分割窗格，形成上下两个panel<br>Ctrl+b，%    垂直分割窗格，形成左右两个panel<br>Ctrl+b+箭头   Ctrl+b不放，可以一直按箭头调整窗格的大小，1<br>Ctrl+b，Alt+箭头   调整窗格大小，5<br>Ctrl+b，Page Up和Page Down  可以上下翻看历史记录<br>Ctrl+b，q  显示窗格对应的数字<br>Ctrl+d     exit     logout  退出当前窗格<br><strong>tmux打开shell自启动</strong><br>打开<code>.bashrc</code>添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if [ $TERM != &quot;screen-256color&quot; ] &amp;&amp; [  $TERM != &quot;screen&quot; ]; then</span><br><span class="line">    tmux attach || tmux new; exit</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p><strong>新建session错误</strong><br>报错sessions should be nested with care, unset $TMUX to force<br>按错误提示执行命令：<br>需要使用命令 unset tmux<br>再次执行 ：问题解决</p><p>vim报错：_arguments:450: _vim_files: function definition file not found<br>直接删除~/.zcompdump文件，但是不知道会不会影响其他插件的功能。</p><p><strong>远程安装tmux，scp传输出错</strong><br><strong>xshell 使用rzsz出差</strong><br>open terminal failed: not a terminal<br>需要关闭tmux才可以</p><p><a href="https://www.cnblogs.com/lizhang4/p/7325086.html" target="_blank" rel="noopener">参考1</a><br><a href="https://blog.csdn.net/williamyuyuyu/article/details/79283374" target="_blank" rel="noopener">参考2</a></p><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><h3 id="vim鼠标右键不能复制、粘贴"><a href="#vim鼠标右键不能复制、粘贴" class="headerlink" title="vim鼠标右键不能复制、粘贴"></a>vim鼠标右键不能复制、粘贴</h3><ol><li>在普通模式下键入:set mouse-=a</li><li>在.vimrc 中添加：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if has(&apos;mouse&apos;)</span><br><span class="line">   set mouse-=a </span><br><span class="line">endif</span><br></pre></td></tr></table></figure></li></ol><h2 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h2><p><strong>安装</strong><br><code>sudo apt-get install zsh</code><br><strong>安装 oh My Zsh</strong><br><code>sh -c &quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&quot;</code><br><strong>修改zsh为默认的shell：</strong><br><code>chsh -s /bin/zsh  #该命令会修改 /etc/passwd 文件中对应的用户名</code><br><strong>修改主题</strong><br>打开~/.zshrc文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 找到如下这一行，将引号中的部分修改为`ys`即可</span><br><span class="line">ZSH_THEME=&quot;ys&quot;</span><br></pre></td></tr></table></figure></p><p><a href="https://blog.csdn.net/qixizhuang/article/details/82958198" target="_blank" rel="noopener">参考1</a><br><a href="https://blog.csdn.net/smallrivers/article/details/78701804" target="_blank" rel="noopener">参考2</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
            <tag> zsh </tag>
            
            <tag> tmux </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sketch paper</title>
      <link href="/2019/09/08/sketchpaper/"/>
      <url>/2019/09/08/sketchpaper/</url>
      
        <content type="html"><![CDATA[<p>skech相关的paper<br><a id="more"></a></p><h1 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h1><h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h1><h2 id="sigraph："><a href="#sigraph：" class="headerlink" title="sigraph："></a>sigraph：</h2><ul><li><a href="https://arxiv.org/abs/1804.08972" target="_blank" rel="noopener">FaceShop: Deep Sketch-based Face Image Editing</a>，Tiziano Portenier Qiyang Hu, Attila Szabo, Siavash Bigdeli, Paolo Favaro, Matthias Zwicker(University of Bern)</li><li><a href="https://esslab.jp/~ess/en/research/inking/" target="_blank" rel="noopener">Real-Time Data-Driven Interactive Rough Sketch Inking</a>，Edgar Simo-Serra, Satoshi Iizuka, Hiroshi Ishikawa (Waseda University)</li><li><a href="https://esslab.jp/~ess/en/research/sketch_master/" target="_blank" rel="noopener">Mastering Sketching: Adversarial Augmentation for Structured Prediction</a>， Edgar Simo-Serra<em>, Satoshi Iizuka</em>, Hiroshi Ishikawa (Waseda University) (*equal contribution)</li><li><a href="https://www.cs.ubc.ca/labs/imager/tr/2018/StrokeAggregator/" target="_blank" rel="noopener">StrokeAggregator: Consolidating Raw Sketches into Artist-Intended Curve Drawings</a>， Chenxi Liu, Enrique Rosales, Alla Sheffer (The University of British Columbia)</li></ul><h2 id="CVPR："><a href="#CVPR：" class="headerlink" title="CVPR："></a>CVPR：</h2><ul><li><a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Hu_Sketch-a-Classifier_Sketch-Based_Photo_CVPR_2018_paper.pdf" target="_blank" rel="noopener">Sketch-a-Classifier: Sketch-Based Photo Classifier Generation</a>，Conghui Hu, Da Li, Yi-Zhe Song, Tao Xiang, Timothy M. Hospedales</li><li><a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Chen_SketchyGAN_Towards_Diverse_CVPR_2018_paper.pdf" target="_blank" rel="noopener">SketchyGAN: Towards Diverse and Realistic Sketch to Image Synthesis</a>，Wengling Chen, James Hays</li><li><a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Song_Learning_to_Sketch_CVPR_2018_paper.pdf" target="_blank" rel="noopener">Learning to Sketch With Shortcut Cycle Consistency</a>，Jifei Song, Kaiyue Pang, Yi-Zhe Song, Tao Xiang, Timothy M. Hospedales</li><li><a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Shen_Zero-Shot_Sketch-Image_Hashing_CVPR_2018_paper.pdf" target="_blank" rel="noopener">Zero-Shot Sketch-Image Hashing，Yuming Shen</a>, Li Liu, Fumin Shen, Ling Shao</li><li><a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Muhammad_Learning_Deep_Sketch_CVPR_2018_paper.pdf" target="_blank" rel="noopener">Learning Deep Sketch Abstraction</a>，Umar Riaz Muhammad, Yongxin Yang, Yi-Zhe Song, Tao Xiang, Timothy M. Hospedales</li><li><a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Xu_SketchMate_Deep_Hashing_CVPR_2018_paper.pdf" target="_blank" rel="noopener">SketchMate: Deep Hashing for Million-Scale Human Sketch Retrieval</a>，Peng Xu, Yongye Huang, Tongtong Yuan, Kaiyue Pang, Yi-Zhe Song, Tao Xiang, Timothy M. Hospedales, Zhanyu Ma, Jun Guo</li></ul><h2 id="ECCV"><a href="#ECCV" class="headerlink" title="ECCV:"></a>ECCV:</h2><ul><li><a href="http://openaccess.thecvf.com/content_ECCV_2018/papers/Jiaxin_Chen_Deep_Cross-modality_Adaptation_ECCV_2018_paper.pdf" target="_blank" rel="noopener">Deep Cross-modality Adaptation via Semantics Preserving Adversarial Learning for Sketch-based 3D Shape Retrieval</a>, Jiaxin Chen, Yi Fang</li><li><a href="http://openaccess.thecvf.com/content_ECCV_2018/papers/Yongyi_Lu_Image_Generation_from_ECCV_2018_paper.pdf" target="_blank" rel="noopener">Image Generation from Sketch Constraint Using Contextual GAN</a>，Yongyi Lu, Shangzhe Wu, Yu-Wing Tai, Chi-Keung Tang</li><li><a href="http://openaccess.thecvf.com/content_ECCV_2018/papers/Jingyi_Zhang_Generative_Domain-Migration_Hashing_ECCV_2018_paper.pdf" target="_blank" rel="noopener">Generative Domain-Migration Hashing for Sketch-to-Image Retrieval</a>，Jingyi Zhang, Fumin Shen, Li Liu, Fan Zhu, Mengyang Yu, Ling Shao, Heng Tao Shen, Luc Van Gool</li><li><a href="http://openaccess.thecvf.com/content_ECCV_2018/papers/Ke_LI_Universal_Sketch_Perceptual_ECCV_2018_paper.pdf" target="_blank" rel="noopener">Universal Sketch Perceptual Grouping</a>，Ke Li, Kaiyue Pang, Jifei Song, Yi-Zhe Song, Tao Xiang, Timothy M. Hospedales, Honggang Zhang</li><li><a href="http://openaccess.thecvf.com/content_ECCV_2018/papers/Kaiyue_Pang_Deep_Factorised_Inverse-Sketching_ECCV_2018_paper.pdf" target="_blank" rel="noopener">Deep Factorised Inverse-Sketching，Kaiyue Pang</a>, Da Li, Jifei Song, Yi-Zhe Song, Tao Xiang, Timothy M. Hospedales</li><li><a href="http://openaccess.thecvf.com/content_ECCV_2018/papers/Changqing_Zou_SketchyScene_Richly-Annotated_Scene_ECCV_2018_paper.pdf" target="_blank" rel="noopener">SketchyScene: Richly-Annotated Scene Sketches</a>，Changqing Zou, Qian Yu, Ruofei Du, Haoran Mo, Yi-Zhe Song, Tao Xiang, Chengying Gao, Baoquan Chen, Hao Zhang  </li><li><a href="http://openaccess.thecvf.com/content_ECCV_2018/papers/Sasikiran_Yelamarthi_A_Zero-Shot_Framework_ECCV_2018_paper.pdf" target="_blank" rel="noopener">A_ Zero-Shot Framework for Sketch based Image Retrieval</a>，Sasi Kiran Yelamarthi, Shiva Krishna Reddy, Ashish Mishra, Anurag Mittal</li></ul>]]></content>
      
      
      <categories>
          
          <category> research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sketch </tag>
            
            <tag> paper </tag>
            
            <tag> cvpr </tag>
            
            <tag> sigraph </tag>
            
            <tag> eccv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>conda</title>
      <link href="/2019/09/08/conda/"/>
      <url>/2019/09/08/conda/</url>
      
        <content type="html"><![CDATA[<p>conda的安装与配置<br><a id="more"></a></p><h1 id="安装conda"><a href="#安装conda" class="headerlink" title="安装conda"></a>安装conda</h1><p> <strong>下载</strong><br> <code>wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh</code><br> <strong>安装</strong><br> <code>bash Miniconda2-latest-Linux-x86_64.sh -b -p /home/user/miniconda2</code><br> <code>mv Miniconda2-latest-Linux-x86_64.sh download</code><br><strong>配置环境</strong><br>在<code>.bashrc</code>中添加<br><code>export PATH=/home/user/miniconda2/bin:$PATH</code><br><code>source .bashrc</code></p><h1 id="conda-环境"><a href="#conda-环境" class="headerlink" title="conda 环境"></a>conda 环境</h1><p><strong>创建环境</strong><br><code>conda create -n py36 python=3.7</code><br><strong>删除环境</strong><br><code>conda remove -n py36 --all</code><br><strong>激活环境</strong><br><code>source activate py36</code><br><strong>退出环境</strong><br><code>source deactivate</code></p><h1 id="conda安装python包"><a href="#conda安装python包" class="headerlink" title="conda安装python包"></a>conda安装python包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda install  tensorflow=1.8.0 #安装包</span><br><span class="line">conda list         #查看已经安装的包</span><br><span class="line">conda update xxx   #更新xxx包</span><br><span class="line">conda uninstall xxx   #卸载xxx包</span><br></pre></td></tr></table></figure><p><strong>清理</strong><br><code>conda clean -p      //删除没有用的包</code><br><code>conda clean -t      //tar打包</code></p><h1 id="jupyter"><a href="#jupyter" class="headerlink" title="jupyter"></a>jupyter</h1><p>进入conda环境中启动jupyter</p><h1 id="cuda安装"><a href="#cuda安装" class="headerlink" title="cuda安装"></a>cuda安装</h1><p><strong>解决CUDA driver version is insufficient for CUDA runtime version</strong><br><code>tensorflow.python.framework.errors_impl.InternalError: cudaGetDevice() failed. Status: CUDA driver version is insufficient for CUDA runtime version</code><br><strong>原因</strong><br>CUDA版本对显卡驱动版本有要求，见如下链接。<br><code>https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html</code><br><strong>解决</strong><br>卸载旧版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda uninstall cudnn</span><br><span class="line">conda uninstall cudatoolkit</span><br></pre></td></tr></table></figure></p><p>安装新版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda install cudatoolkit=9.0</span><br><span class="line">conda install cudnn</span><br></pre></td></tr></table></figure></p><p>​<br><a href="http://www.pianshen.com/article/6406282694/" target="_blank" rel="noopener">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> conda </tag>
            
            <tag> cuda </tag>
            
            <tag> tensorflow </tag>
            
            <tag> jupyter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ftp服务器搭建</title>
      <link href="/2019/09/03/ftp/"/>
      <url>/2019/09/03/ftp/</url>
      
        <content type="html"><![CDATA[<p>在ubuntu服务器上搭建ftp服务，用于个人使用<br><a id="more"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>安装VSFTPD</strong><br>使用 apt-get 安装 vsftpd：<br><code>sudo apt-get install vsftpd -y</code><br><strong>启动 VSFTPD</strong><br>安装完成后 VSFTPD 会自动启动，通过 netstat 命令可以看到系统已经[监听了 21 端口]：<br><code>sudo netstat -nltp | grep 21</code><br>如果没有启动，可以手动开启 VSFTPD 服务：<br><code>sudo systemctl start vsftpd.service</code><br>FTP 协议默认使用 21 端口作为服务端口<br><strong>配置用户访问目录</strong><br>新建用户主目录<br><code>sudo mkdir /home/ftp</code><br><strong>新建用户uftp并设置密码</strong><br>创建一个用户 uftp ：<br><code>sudo useradd -d /home/uftp -s /bin/bash uftp</code><br>为用户 uftp 设置密码：<br><code>sudo passwd uftp</code><br>删除掉 pam.d 中 vsftpd，因为该配置文件会导致使用用户名登录 ftp 失败：<br><code>sudo rm /etc/pam.d/vsftpd</code><br><strong>限制该用户只能通过ftp访问，不可以直接登录服务器</strong><br>sudo usermod -s /sbin/nologin uftp<br><strong>修改vsftpd配置</strong><br>修改 <code>/etc/vsftpd.conf</code> 文件中的配置（直接将如下配置添加到配置文件最下方）：<br>限制用户对主目录以外目录访问<br><code>chroot_local_user=YES</code><br>指定一个 userlist 存放允许访问 ftp 的用户列表<br><code>userlist_deny=NO</code><br><code>userlist_enable=YES</code><br>记录允许访问 ftp 用户列表<br><code>userlist_file=/etc/vsftpd.user_list</code><br>不配置可能导致莫名的530问题<br><code>seccomp_sandbox=NO</code><br>允许文件上传<br><code>write_enable=YES</code><br>使用utf8编码<br><code>utf8_filesystem=YES</code><br>新建文件 /etc/vsftpd.user_list，用于存放允许访问 ftp 的用户：<br><code>sudo touch /etc/vsftpd.user_list</code><br><code>sudo chmod a+w /etc/vsftpd.user_list</code><br>修改 <code>/etc/vsftpd.user_list</code> ，加入刚刚创建的用户：<br><code>uftp</code><br><strong>设置访问权限</strong><br>设置主目录访问权限（只读）：<br><code>sudo chmod a-w /home/ftp</code><br>新建公共目录，并设置权限（读写）：<br><code>sudo mkdir /home/ftp/public &amp;&amp; sudo chmod 777 -R/home/ftp/public</code><br>重启vsftpd 服务：<br><code>sudo systemctl restart vsftpd.service</code></p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>1.购买域名<br>2.设置域名解析，直接将域名绑定到ftp服务器的ip上。</p><h2 id="安装问题"><a href="#安装问题" class="headerlink" title="安装问题"></a>安装问题</h2><p><strong>1.ftp连接错误</strong><code>500 OOPS: vsftpd</code><br><strong>解决</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vsftpd/vsftpd.conf</span><br><span class="line"># 添加一行配置 allow_writeable_chroot=YES</span><br></pre></td></tr></table></figure></p><p><a href="https://www.php.cn/linux-363729.html" target="_blank" rel="noopener">参考</a></p><h2 id="ftp命令"><a href="#ftp命令" class="headerlink" title="ftp命令"></a>ftp命令</h2><p><strong>命令行连接ftp</strong><br><code>ftp ip</code><br>输入用户名，密码<br>或者 <code>ftp&gt;open ip</code><br><strong>下载文件</strong><br><code>ftp&gt;get filename</code><br><strong>上传文件</strong><br><code>ftp&gt;put filename</code><br><strong>查看目录</strong><br><code>ftp&gt;ls</code></p>]]></content>
      
      
      <categories>
          
          <category> 安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ftp </tag>
            
            <tag> ubuntu </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo创建个人博客</title>
      <link href="/2019/08/27/Hexo/"/>
      <url>/2019/08/27/Hexo/</url>
      
        <content type="html"><![CDATA[<p>Hexo安装、配置，在github上部署，yelee主题配置<br><a id="more"></a></p><h1 id="安装nodejs和npm"><a href="#安装nodejs和npm" class="headerlink" title="安装nodejs和npm"></a>安装nodejs和npm</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p>创建文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir Hexo  </span><br><span class="line">cd Hexo</span><br></pre></td></tr></table></figure></p><p>安装Hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo</span><br></pre></td></tr></table></figure></p><p>初始化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></p><p>此步骤会在hexo文件夹下生成默认的网站模板文件。</p><p>清除之前生成的静态模板文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></p><p>生成新的静态模板文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate（hexo g）</span><br></pre></td></tr></table></figure></p><p>启动hexo的本地服务器：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server（hexo s）</span><br></pre></td></tr></table></figure></p><h1 id="github配置"><a href="#github配置" class="headerlink" title="github配置"></a>github配置</h1><p>1.新建一个仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">github名.github.io</span><br></pre></td></tr></table></figure></p><p>(名称必须与github名一致)<br>在该仓库Settings下GitHub Pageszhong设置Custom domain为自己的域名（和hexo中CNAME设置一样）<br>在source目录下创建文件CNAME<br>写入自己的域名</p><p>2.修改_config.yml文件<br>deploy:<br>type: git<br>repository: <a href="https://github.com/githubID/仓库名.github.io.git" target="_blank" rel="noopener">https://github.com/githubID/仓库名.github.io.git</a><br>branch: master</p><p>3.部署<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy（hexo d）</span><br></pre></td></tr></table></figure></p><h1 id="安装-Hexo-Admin插件"><a href="#安装-Hexo-Admin插件" class="headerlink" title="安装 Hexo Admin插件"></a>安装 Hexo Admin插件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br></pre></td></tr></table></figure><p>打开本地管理界面<br><a href="http://localhost:4000/admin" target="_blank" rel="noopener">http://localhost:4000/admin</a></p><h1 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h1><p>1.创建文章<br>hexo根目录命令行输入<code>hexo new &lt;模板&gt; &lt;文章名&gt;</code>新建文章  </p><p><table>  <tr><td>参数</td><td>功能</td><td>路径</td></tr>  <tr><td>post</td><td>新建文章</td><td>/source/_posts/</td></tr>  <tr><td>draft</td><td>新建草稿</td><td>/source/_drafts/</td></tr>  <tr><td>page</td><td>新建页面（标签、分类等）</td><td>/source/</td></tr></table><br>通常情况下使用<code>hexo new post name</code><br>会在<code>source/_posts</code>下生成一个<code>name.md</code>的文件。  </p><h1 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h1><p>配置<code>_config_yml</code>里面的post_asset_folder:false这个选项设置为true。<br>安装<code>hexo-asset-image</code>，运行<code>hexo n &quot;xxxx&quot;</code>来生成md博文时，<code>/source/_posts</code>文件夹内除了xxxx.md文件还有一个同名的文件夹，把图片放入该文件夹。<br>问题直接运行<code>npm install hexo-asset-image save</code>安装的插件有问题，图片不能正确显示，生成的html中图片路径不对（显示 /.top//name.png），使用如下即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/7ym0n/hexo-asset-image --save</span><br></pre></td></tr></table></figure></p><p>插入图片，在md中加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![xxx](blogName/imageName.png)</span><br></pre></td></tr></table></figure></p><p>需要配置_config.yml中的url，本地配置为localhost，远程配置为对应的域名<br><a href="https://www.jianshu.com/p/3db6a61d3782" target="_blank" rel="noopener">参考</a></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="安装hexo错误：（nodejs版本太低，不能用apt直接升级）"><a href="#安装hexo错误：（nodejs版本太低，不能用apt直接升级）" class="headerlink" title="安装hexo错误：（nodejs版本太低，不能用apt直接升级）"></a>安装hexo错误：（nodejs版本太低，不能用apt直接升级）</h2><p><strong>解决</strong><br>1.产看node版本，没安装的请先安装；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  node -v</span><br></pre></td></tr></table></figure></p><p>2.清楚node缓存；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo npm cache clean -f</span><br></pre></td></tr></table></figure></p><p>3.安装node版本管理工具’n’;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo npm install n -g</span><br></pre></td></tr></table></figure></p><p>4.使用版本管理工具安装指定node或者升级到最新node版本；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo n stable  （安装node最新版本）</span><br></pre></td></tr></table></figure></p><p><a href="https://www.cnblogs.com/legendjslc/articles/10131412.html" target="_blank" rel="noopener">参考</a></p><h2 id="hexo-d-ERROR-Deployer-not-found-git"><a href="#hexo-d-ERROR-Deployer-not-found-git" class="headerlink" title="hexo d(ERROR Deployer not found: git)"></a>hexo d(ERROR Deployer not found: git)</h2><p><strong>解决</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></p><h2 id="hexo输入数学公式不显示"><a href="#hexo输入数学公式不显示" class="headerlink" title="hexo输入数学公式不显示"></a>hexo输入数学公式不显示</h2><ol><li><p>在开始部分插入如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; async</span><br><span class="line">  src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>在网页中插入所需数学公式的特定格式(或者见yelee):<br>（插入1后）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/x-mathjax-config&quot;&gt;</span><br><span class="line">MathJax.Hub.Config(&#123;</span><br><span class="line">tex2jax: &#123;inlineMath: [[&apos;$&apos;,&apos;$&apos;], [&apos;\\(&apos;,&apos;\\)&apos;]]&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><p><a href="http://daniellaah.github.io/2016/Mathmatical-Formula-within-Markdown.html" target="_blank" rel="noopener">参考</a></p><h2 id="有序列表显示问题“-A空格”"><a href="#有序列表显示问题“-A空格”" class="headerlink" title="有序列表显示问题“- A空格”"></a>有序列表显示问题<code>“- A空格”</code></h2><ul><li>A boy</li><li>A- boy<br>如上显示正常显示，前面应该有一个圆点，第一行A空格前面没有圆点。暂时解决只能在A后直接加字符</li></ul><h1 id="yelee"><a href="#yelee" class="headerlink" title="yelee"></a>yelee</h1><p>1.在 themes下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</span><br></pre></td></tr></table></figure></p><p>2.修改_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: yelee</span><br></pre></td></tr></table></figure></p><p>3.支持数学公式<br>修改 <code>themes/yelee/_config.yml</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mathjax: true</span><br></pre></td></tr></table></figure></p><p>4.不喜欢yelee的标题风格<br>修改 themes/yelee/_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heading_stytle:2  //改为github风格</span><br></pre></td></tr></table></figure></p><p>5.社交图标设置<br>themes/yelee/source/css/_partial/customise/social-icon.styl</p><p><strong>参考</strong><br><a href="http://moxfive.coding.me/yelee/2.Basic-Usage/post-excerpt.html" target="_blank" rel="noopener">yelee配置中文说明</a><br><a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="noopener">yelee github</a><br><a href="https://www.imooc.com/article/44667" target="_blank" rel="noopener">博客搭建</a></p>]]></content>
      
      
      <categories>
          
          <category> 安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>背包问题</title>
      <link href="/2019/08/26/knapsack-problem/"/>
      <url>/2019/08/26/knapsack-problem/</url>
      
        <content type="html"><![CDATA[<p>背包问题(Knapsack problem)是一种组合优化的NP完全问题<br><a id="more"></a></p><h1 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h1><p><strong>问题描述</strong><br>假设有N个物品，其中第i个物品的重量为W<sub>i</sub>。 现在需要将这些物品分成两堆，使得在“第一堆物品的总重量与第二堆物品的总重量之差尽可能小”的前提下，第一堆物品的数量与第二堆物品的数量之差尽可能大。那么，两堆物品总重量之差最小是多少？在总重量之差最小的前提下，两堆物品的数量之差最大是多少？</p><p><strong>输入</strong><br>第一行包含一个整数N，2<script type="math/tex">\leq</script>N<script type="math/tex">\leq</script>100。<br>第二行包含N个空格隔开的整数W<sub>1</sub>到W<sub>N</sub>，1<script type="math/tex">\leq</script>W<sub>i</sub><script type="math/tex">\leq</script>100。</p><p><strong>输出</strong><br>输出两个空格隔开的整数，第一个整数表示两堆物品的总重量之差的最小值，第二个整数表示在总重量之差最小的提前下，两堆物品的数量之差的最大值。</p><p><strong>样例输入</strong>  </p><table><tr><td>6</td></tr><tr><td>1 2 3 4 5 6</td></tr></table><p><strong>样例输出</strong></p><table><tr><td>1 2</td></tr></table><p><strong>解析</strong><br>思路：<br>重量之差最小：可以理解为可以放N个物品重量一半的背包问题，在背包中放入的物体总量最大。<br>数量之差最大：若总重量为偶数，两个背包一样大。若总总量为奇数，一个背包比另外一个背包大1。在总重量小（或相等）的一个背包中放入数量尽可能少的物品，在另一个背包中放入数据尽可能多的物品。<br>以样例为例，背包重量空间为10，如果当前背包的重量小于放入前一个物品的（当前背包重量-当前物品重量）所对应的重量+当前物品重量则放入，表格中写入放入后背包的重量。（第一行表示背包重量剩余空间，表格中表示当前背包的重量和放入的数量）。记录放入背包的物品数，如果放入则+1。如果放入与不放重量一样，则判断放入数量+1与不放数量更小的表示新的记录。<br>按行更新，使不同背包空间放入尽可能重量多数量少的物品</p><table>  <tr><td>物品\背包空间</td><td>10</td><td>9</td><td>8</td><td>7</td><td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td></tr>  <tr><td>1</td><td>1  1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td bgcolor="“#8A2BE2”">1 1</td><td>0 0</td></tr>  <tr><td>2</td><td>3 2</td><td>3 2</td><td>3 2</td><td>3 2</td><td>3 2</td><td>3 2</td><td>3 2</td><td bgcolor="“#8A2BE2”">3 2</td><td>2 1</td><td>1 1</td><td bgcolor="#FF7F50">0 0 </td></tr>  <tr><td>3</td><td>6 3</td><td>6 3</td><td>6 3</td><td>6 3</td><td bgcolor="“#8A2BE2”">6 3</td><td>5 2</td><td>4 2</td><td>3 1</td><td>2 1</td><td bgcolor="#FF7F50">1 1</td><td> 0 0</td></tr>  <tr><td>4</td><td bgcolor="“#8A2BE2”">10 4</td><td>9 3</td><td>8 3</td><td>7 2</td><td>6 2</td><td bgcolor="#FF7F50">5 2</td><td>4 1</td><td>3 1</td><td>2 1</td><td>1 1</td><td bgcolor="#00FF00">0 0 </td></tr>  <tr><td>5</td><td bgcolor="#FF7F50">10 3</td><td>9 2</td><td>8 2</td><td>7 2</td><td>6 2</td><td>5 1</td><td bgcolor="#00FF00">4 1</td><td>3 1</td><td>2 1</td><td>1 1 </td><td>0 0</td></tr>  <tr><td>6</td><td bgcolor="#00FF00">10 2</td><td>9 2</td><td>8 2</td><td>7 2</td><td>6 1</td><td>5 1</td><td>4 1</td><td>3 1</td><td>2 1</td><td>1 1</td><td>0 0</td></tr></table><p><strong>源码</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">public class bag2 &#123;</span><br><span class="line">//动态规划 背包问题</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        int num=sc.nextInt();</span><br><span class="line">        int weight[] = new int[num];</span><br><span class="line">        int sum=0,m=0;</span><br><span class="line">        <span class="keyword">for</span>(int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        weight[i]=sc.nextInt();</span><br><span class="line">        sum+=weight[i];</span><br><span class="line">        &#125;</span><br><span class="line">        m=sum;</span><br><span class="line">        sum/=2;</span><br><span class="line">        int dp[]=new int[sum+1];</span><br><span class="line">        int count[]=new int[sum+1];</span><br><span class="line">        <span class="keyword">for</span>(int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">for</span>(int j=sum;j&gt;=weight[i];j--)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[j]&lt;(dp[j-weight[i]]+weight[i]))</span><br><span class="line">        &#123;</span><br><span class="line">        dp[j]=dp[j-weight[i]]+weight[i];</span><br><span class="line">        count[j]=count[j-weight[i]]+1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(dp[j]==(dp[j-weight[i]]+weight[i]))</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(count[j]&gt;count[j-weight[i]]+1)</span><br><span class="line">        &#123;</span><br><span class="line">        count[j]=count[j-weight[i]]+1;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         System.out.println(dp[j]+<span class="string">" "</span>+count[j]+<span class="string">"   "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print((m-2*dp[sum])+<span class="string">" "</span>);//输出重量最小差</span><br><span class="line"></span><br><span class="line">        System.out.print(num-2*count[sum]);//输出数量最大差</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>另一种思路</strong><br>先考虑重量最小，然后可以得知，两个背包分别放入总量。可以转化为N个整数，选出M个整数的和为固定值，找出所有可能的组合。（速度太慢了，不能通过测试）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">public class bag1 &#123;</span><br><span class="line">//动态规划 背包问题</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        int num=sc.nextInt();</span><br><span class="line">        int weight[] = new int[num];</span><br><span class="line">        int sum=0,m=0;</span><br><span class="line">        int dp[]=new int[10000];</span><br><span class="line">        for(int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        weight[i]=sc.nextInt();</span><br><span class="line">        sum+=weight[i];</span><br><span class="line">        &#125;</span><br><span class="line">        m=sum;</span><br><span class="line">        sum/=2;</span><br><span class="line">        for(int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        for(int j=sum;j&gt;=weight[i];j--)</span><br><span class="line">        &#123;</span><br><span class="line">        dp[j]=(dp[j]&gt;(dp[j-weight[i]]+weight[i]))?dp[j]:(dp[j-weight[i]]+weight[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print((m-2*dp[sum])+&quot; &quot;);//输出重量最小差</span><br><span class="line">        int A=m-2*dp[sum];</span><br><span class="line">        int B=m;</span><br><span class="line">        int C=(A+B)/2; //重量更多的物体的和</span><br><span class="line">        int large=binaryCal(weight,C);</span><br><span class="line">        System.out.print(large-(num-large));//输出数量最大差</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">public static int binaryCal(int[] a,int m) &#123;</span><br><span class="line">int n = a.length;</span><br><span class="line">        //最大的数为2的n次方</span><br><span class="line">int max = 1 &lt;&lt; n;</span><br><span class="line">int result=0;</span><br><span class="line">for(int i = 1;i &lt; max;i++) &#123;</span><br><span class="line">            //转成二进制数</span><br><span class="line">String binaryNum = Integer.toBinaryString(i);</span><br><span class="line">//转成相同的位数，不足n位的在前补0</span><br><span class="line">            binaryNum = toSameLen(binaryNum,n);</span><br><span class="line">char[] bitNum = binaryNum.toCharArray();</span><br><span class="line">int sum = 0;</span><br><span class="line">for(int j = 0;j &lt; bitNum.length;j++) &#123;</span><br><span class="line">                //二进制数当前位置为1，则加起来</span><br><span class="line">if (bitNum[j] == &apos;1&apos;) &#123;</span><br><span class="line">sum += a[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">            //和为m了，输出</span><br><span class="line">if (sum == m) &#123;</span><br><span class="line">int tmp=output(bitNum,a);</span><br><span class="line">if(result&lt;tmp)</span><br><span class="line">result=tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private static String toSameLen(String binaryNum, int len) &#123;</span><br><span class="line">//数的长度</span><br><span class="line">        int numLen = binaryNum.length();</span><br><span class="line">if (numLen == len) &#123;</span><br><span class="line">return binaryNum;</span><br><span class="line">&#125;</span><br><span class="line">StringBuilder sb = new StringBuilder();</span><br><span class="line">        //差几位补几个0</span><br><span class="line">for(int i = 0;i &lt; len - numLen;i++) &#123;</span><br><span class="line">sb.append(0);</span><br><span class="line">&#125;</span><br><span class="line">return sb.append(binaryNum).toString();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">private static int output(char[] bitNum, int[] a) &#123;</span><br><span class="line">int sum=0;</span><br><span class="line">for(int i = 0;i &lt; bitNum.length;i++) &#123;</span><br><span class="line">if (bitNum[i] == &apos;1&apos;) &#123;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
            <tag> 背包问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python small tips</title>
      <link href="/2019/07/17/python-small-tips/"/>
      <url>/2019/07/17/python-small-tips/</url>
      
        <content type="html"><![CDATA[<p>python中list<br><a id="more"></a></p><h1 id="1-list转字符串"><a href="#1-list转字符串" class="headerlink" title="1.list转字符串"></a>1.list转字符串</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list=[1,2,3,4,5]</span><br><span class="line">&apos;&apos;.join(list) 为：12345</span><br><span class="line">&apos;,&apos;.join(list) 为：1,2,3,4,5</span><br></pre></td></tr></table></figure><h1 id="2-根据路径获取文件名"><a href="#2-根据路径获取文件名" class="headerlink" title="2.根据路径获取文件名"></a>2.根据路径获取文件名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.path.dirname(path)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> list </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
