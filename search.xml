<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>image</title>
      <link href="/2019/09/03/image/"/>
      <url>/2019/09/03/image/</url>
      
        <content type="html"><![CDATA[<p>添加一张图片<br><img src="//blog.zhengmingz.top/2019/09/03/image/5a1.png" alt="5a1"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2019/08/27/Hexo/"/>
      <url>/2019/08/27/Hexo/</url>
      
        <content type="html"><![CDATA[<p>Hexo安装、配置，在github上部署，yelee主题配置<br><a id="more"></a></p><h1 id="安装nodejs和npm"><a href="#安装nodejs和npm" class="headerlink" title="安装nodejs和npm"></a>安装nodejs和npm</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><p>创建文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir Hexo  </span><br><span class="line">cd Hexo</span><br></pre></td></tr></table></figure></p><p>安装Hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g hexo</span><br></pre></td></tr></table></figure></p><p>初始化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></p><p>此步骤会在hexo文件夹下生成默认的网站模板文件。</p><p>清除之前生成的静态模板文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></p><p>生成新的静态模板文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate（hexo g）</span><br></pre></td></tr></table></figure></p><p>启动hexo的本地服务器：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server（hexo s）</span><br></pre></td></tr></table></figure></p><h1 id="github配置"><a href="#github配置" class="headerlink" title="github配置"></a>github配置</h1><p>1.新建一个仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">github名.github.io</span><br></pre></td></tr></table></figure></p><p>(名称必须与github名一致)<br>在该仓库Settings下GitHub Pageszhong设置Custom domain为自己的域名（和hexo中CNAME设置一样）<br>在source目录下创建文件CNAME<br>写入自己的域名</p><p>2.修改_config.yml文件<br>deploy:<br>type: git<br>repository: <a href="https://github.com/githubID/仓库名.github.io.git" target="_blank" rel="noopener">https://github.com/githubID/仓库名.github.io.git</a><br>branch: master</p><p>3.部署<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy（hexo d）</span><br></pre></td></tr></table></figure></p><h1 id="安装-Hexo-Admin插件"><a href="#安装-Hexo-Admin插件" class="headerlink" title="安装 Hexo Admin插件"></a>安装 Hexo Admin插件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br></pre></td></tr></table></figure><p>打开本地管理界面<br><a href="http://localhost:4000/admin" target="_blank" rel="noopener">http://localhost:4000/admin</a></p><h1 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h1><p>配置<code>_config_yml</code>里面的post_asset_folder:false这个选项设置为true。<br>安装<code>hexo-asset-image</code>，运行<code>hexo n &quot;xxxx&quot;</code>来生成md博文时，<code>/source/_posts</code>文件夹内除了xxxx.md文件还有一个同名的文件夹，把图片放入该文件夹。<br>问题直接运行<code>npm install hexo-asset-image save</code>安装的插件有问题，图片不能正确显示，生成的html中图片路径不对（显示 /.top//name.png），使用如下即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install https://github.com/7ym0n/hexo-asset-image --save</span><br></pre></td></tr></table></figure></p><p>插入图片，在md中加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![xxx](blogName/imageName.png)</span><br></pre></td></tr></table></figure></p><p><a href="https://www.jianshu.com/p/3db6a61d3782" target="_blank" rel="noopener">参考</a></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="安装hexo错误：（nodejs版本太低，不能用apt直接升级）"><a href="#安装hexo错误：（nodejs版本太低，不能用apt直接升级）" class="headerlink" title="安装hexo错误：（nodejs版本太低，不能用apt直接升级）"></a>安装hexo错误：（nodejs版本太低，不能用apt直接升级）</h2><p><strong>解决</strong><br>1.产看node版本，没安装的请先安装；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  node -v</span><br></pre></td></tr></table></figure></p><p>2.清楚node缓存；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo npm cache clean -f</span><br></pre></td></tr></table></figure></p><p>3.安装node版本管理工具’n’;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo npm install n -g</span><br></pre></td></tr></table></figure></p><p>4.使用版本管理工具安装指定node或者升级到最新node版本；<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo n stable  （安装node最新版本）</span><br></pre></td></tr></table></figure></p><p><a href="https://www.cnblogs.com/legendjslc/articles/10131412.html" target="_blank" rel="noopener">参考</a></p><h2 id="hexo-d-ERROR-Deployer-not-found-git"><a href="#hexo-d-ERROR-Deployer-not-found-git" class="headerlink" title="hexo d(ERROR Deployer not found: git)"></a>hexo d(ERROR Deployer not found: git)</h2><p><strong>解决</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></p><h2 id="hexo输入数学公式不显示"><a href="#hexo输入数学公式不显示" class="headerlink" title="hexo输入数学公式不显示"></a>hexo输入数学公式不显示</h2><ol><li><p>在开始部分插入如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; async</span><br><span class="line">  src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&quot;&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>在网页中插入所需数学公式的特定格式:<br>（插入1后）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/x-mathjax-config&quot;&gt;</span><br><span class="line">MathJax.Hub.Config(&#123;</span><br><span class="line">tex2jax: &#123;inlineMath: [[&apos;$&apos;,&apos;$&apos;], [&apos;\\(&apos;,&apos;\\)&apos;]]&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><p><a href="http://daniellaah.github.io/2016/Mathmatical-Formula-within-Markdown.html" target="_blank" rel="noopener">参考</a></p><h1 id="yelee"><a href="#yelee" class="headerlink" title="yelee"></a>yelee</h1><p>1.在 themes下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</span><br></pre></td></tr></table></figure></p><p>2.修改_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: yelee</span><br></pre></td></tr></table></figure></p><p>3.支持数学公式<br>修改 <code>themes/yelee/_config.yml</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mathjax: true</span><br></pre></td></tr></table></figure></p><p>4.不喜欢yelee的标题风格<br>修改 themes/yelee/_config.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heading_stytle:2  //改为github风格</span><br></pre></td></tr></table></figure></p><p>5.社交图标设置<br>themes/yelee/source/css/_partial/customise/social-icon.styl</p><p><strong>参考</strong><br><a href="http://moxfive.coding.me/yelee/2.Basic-Usage/post-excerpt.html" target="_blank" rel="noopener">yelee配置中文说明</a><br><a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="noopener">yelee github</a><br><a href="https://www.imooc.com/article/44667" target="_blank" rel="noopener">博客搭建</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
            <tag> Hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>背包问题</title>
      <link href="/2019/08/26/knapsack-problem/"/>
      <url>/2019/08/26/knapsack-problem/</url>
      
        <content type="html"><![CDATA[<p>背包问题(Knapsack problem)是一种组合优化的NP完全问题<br><a id="more"></a></p><h1 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h1><p><strong>问题描述</strong><br>假设有N个物品，其中第i个物品的重量为W<sub>i</sub>。 现在需要将这些物品分成两堆，使得在“第一堆物品的总重量与第二堆物品的总重量之差尽可能小”的前提下，第一堆物品的数量与第二堆物品的数量之差尽可能大。那么，两堆物品总重量之差最小是多少？在总重量之差最小的前提下，两堆物品的数量之差最大是多少？</p><p><strong>输入</strong><br>第一行包含一个整数N，2<script type="math/tex">\leq</script>N<script type="math/tex">\leq</script>100。<br>第二行包含N个空格隔开的整数W<sub>1</sub>到W<sub>N</sub>，1<script type="math/tex">\leq</script>W<sub>i</sub><script type="math/tex">\leq</script>100。</p><p><strong>输出</strong><br>输出两个空格隔开的整数，第一个整数表示两堆物品的总重量之差的最小值，第二个整数表示在总重量之差最小的提前下，两堆物品的数量之差的最大值。</p><p><strong>样例输入</strong>  </p><table><tr><td>6</td></tr><tr><td>1 2 3 4 5 6</td></tr></table><p><strong>样例输出</strong></p><table><tr><td>1 2</td></tr></table><p><strong>解析</strong><br>思路：<br>重量之差最小：可以理解为可以放N个物品重量一半的背包问题，在背包中放入的物体总量最大。<br>数量之差最大：若总重量为偶数，两个背包一样大。若总总量为奇数，一个背包比另外一个背包大1。在总重量小（或相等）的一个背包中放入数量尽可能少的物品，在另一个背包中放入数据尽可能多的物品。<br>以样例为例，背包重量空间为10，如果当前背包的重量小于放入前一个物品的（当前背包重量-当前物品重量）所对应的重量+当前物品重量则放入，表格中写入放入后背包的重量。（第一行表示背包重量剩余空间，表格中表示当前背包的重量和放入的数量）。记录放入背包的物品数，如果放入则+1。如果放入与不放重量一样，则判断放入数量+1与不放数量更小的表示新的记录。<br>按行更新，使不同背包空间放入尽可能重量多数量少的物品</p><table>  <tr><td>物品\背包空间</td><td>10</td><td>9</td><td>8</td><td>7</td><td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td><td>0</td></tr>  <tr><td>1</td><td>1  1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td>1 1</td><td bgcolor="“#8A2BE2”">1 1</td><td>0 0</td></tr>  <tr><td>2</td><td>3 2</td><td>3 2</td><td>3 2</td><td>3 2</td><td>3 2</td><td>3 2</td><td>3 2</td><td bgcolor="“#8A2BE2”">3 2</td><td>2 1</td><td>1 1</td><td bgcolor="#FF7F50">0 0 </td></tr>  <tr><td>3</td><td>6 3</td><td>6 3</td><td>6 3</td><td>6 3</td><td bgcolor="“#8A2BE2”">6 3</td><td>5 2</td><td>4 2</td><td>3 1</td><td>2 1</td><td bgcolor="#FF7F50">1 1</td><td> 0 0</td></tr>  <tr><td>4</td><td bgcolor="“#8A2BE2”">10 4</td><td>9 3</td><td>8 3</td><td>7 2</td><td>6 2</td><td bgcolor="#FF7F50">5 2</td><td>4 1</td><td>3 1</td><td>2 1</td><td>1 1</td><td bgcolor="#00FF00">0 0 </td></tr>  <tr><td>5</td><td bgcolor="#FF7F50">10 3</td><td>9 2</td><td>8 2</td><td>7 2</td><td>6 2</td><td>5 1</td><td bgcolor="#00FF00">4 1</td><td>3 1</td><td>2 1</td><td>1 1 </td><td>0 0</td></tr>  <tr><td>6</td><td bgcolor="#00FF00">10 2</td><td>9 2</td><td>8 2</td><td>7 2</td><td>6 1</td><td>5 1</td><td>4 1</td><td>3 1</td><td>2 1</td><td>1 1</td><td>0 0</td></tr></table><p><strong>源码</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">public class bag2 &#123;</span><br><span class="line">//动态规划 背包问题</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        int num=sc.nextInt();</span><br><span class="line">        int weight[] = new int[num];</span><br><span class="line">        int sum=0,m=0;</span><br><span class="line">        <span class="keyword">for</span>(int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        weight[i]=sc.nextInt();</span><br><span class="line">        sum+=weight[i];</span><br><span class="line">        &#125;</span><br><span class="line">        m=sum;</span><br><span class="line">        sum/=2;</span><br><span class="line">        int dp[]=new int[sum+1];</span><br><span class="line">        int count[]=new int[sum+1];</span><br><span class="line">        <span class="keyword">for</span>(int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">for</span>(int j=sum;j&gt;=weight[i];j--)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(dp[j]&lt;(dp[j-weight[i]]+weight[i]))</span><br><span class="line">        &#123;</span><br><span class="line">        dp[j]=dp[j-weight[i]]+weight[i];</span><br><span class="line">        count[j]=count[j-weight[i]]+1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(dp[j]==(dp[j-weight[i]]+weight[i]))</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(count[j]&gt;count[j-weight[i]]+1)</span><br><span class="line">        &#123;</span><br><span class="line">        count[j]=count[j-weight[i]]+1;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">         System.out.println(dp[j]+<span class="string">" "</span>+count[j]+<span class="string">"   "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print((m-2*dp[sum])+<span class="string">" "</span>);//输出重量最小差</span><br><span class="line"></span><br><span class="line">        System.out.print(num-2*count[sum]);//输出数量最大差</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>另一种思路</strong><br>先考虑重量最小，然后可以得知，两个背包分别放入总量。可以转化为N个整数，选出M个整数的和为固定值，找出所有可能的组合。（速度太慢了，不能通过测试）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">public class bag1 &#123;</span><br><span class="line">//动态规划 背包问题</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner sc = new Scanner(System.in);</span><br><span class="line">        int num=sc.nextInt();</span><br><span class="line">        int weight[] = new int[num];</span><br><span class="line">        int sum=0,m=0;</span><br><span class="line">        int dp[]=new int[10000];</span><br><span class="line">        for(int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        weight[i]=sc.nextInt();</span><br><span class="line">        sum+=weight[i];</span><br><span class="line">        &#125;</span><br><span class="line">        m=sum;</span><br><span class="line">        sum/=2;</span><br><span class="line">        for(int i=0;i&lt;num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        for(int j=sum;j&gt;=weight[i];j--)</span><br><span class="line">        &#123;</span><br><span class="line">        dp[j]=(dp[j]&gt;(dp[j-weight[i]]+weight[i]))?dp[j]:(dp[j-weight[i]]+weight[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print((m-2*dp[sum])+&quot; &quot;);//输出重量最小差</span><br><span class="line">        int A=m-2*dp[sum];</span><br><span class="line">        int B=m;</span><br><span class="line">        int C=(A+B)/2; //重量更多的物体的和</span><br><span class="line">        int large=binaryCal(weight,C);</span><br><span class="line">        System.out.print(large-(num-large));//输出数量最大差</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">public static int binaryCal(int[] a,int m) &#123;</span><br><span class="line">int n = a.length;</span><br><span class="line">        //最大的数为2的n次方</span><br><span class="line">int max = 1 &lt;&lt; n;</span><br><span class="line">int result=0;</span><br><span class="line">for(int i = 1;i &lt; max;i++) &#123;</span><br><span class="line">            //转成二进制数</span><br><span class="line">String binaryNum = Integer.toBinaryString(i);</span><br><span class="line">//转成相同的位数，不足n位的在前补0</span><br><span class="line">            binaryNum = toSameLen(binaryNum,n);</span><br><span class="line">char[] bitNum = binaryNum.toCharArray();</span><br><span class="line">int sum = 0;</span><br><span class="line">for(int j = 0;j &lt; bitNum.length;j++) &#123;</span><br><span class="line">                //二进制数当前位置为1，则加起来</span><br><span class="line">if (bitNum[j] == &apos;1&apos;) &#123;</span><br><span class="line">sum += a[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">            //和为m了，输出</span><br><span class="line">if (sum == m) &#123;</span><br><span class="line">int tmp=output(bitNum,a);</span><br><span class="line">if(result&lt;tmp)</span><br><span class="line">result=tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private static String toSameLen(String binaryNum, int len) &#123;</span><br><span class="line">//数的长度</span><br><span class="line">        int numLen = binaryNum.length();</span><br><span class="line">if (numLen == len) &#123;</span><br><span class="line">return binaryNum;</span><br><span class="line">&#125;</span><br><span class="line">StringBuilder sb = new StringBuilder();</span><br><span class="line">        //差几位补几个0</span><br><span class="line">for(int i = 0;i &lt; len - numLen;i++) &#123;</span><br><span class="line">sb.append(0);</span><br><span class="line">&#125;</span><br><span class="line">return sb.append(binaryNum).toString();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">private static int output(char[] bitNum, int[] a) &#123;</span><br><span class="line">int sum=0;</span><br><span class="line">for(int i = 0;i &lt; bitNum.length;i++) &#123;</span><br><span class="line">if (bitNum[i] == &apos;1&apos;) &#123;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
            <tag> 背包问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python small tips</title>
      <link href="/2019/07/17/python-small-tips/"/>
      <url>/2019/07/17/python-small-tips/</url>
      
        <content type="html"><![CDATA[<p>python中list<br><a id="more"></a></p><h1 id="1-list转字符串"><a href="#1-list转字符串" class="headerlink" title="1.list转字符串"></a>1.list转字符串</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list=[1,2,3,4,5]</span><br><span class="line">&apos;&apos;.join(list) 为：12345</span><br><span class="line">&apos;,&apos;.join(list) 为：1,2,3,4,5</span><br></pre></td></tr></table></figure><h1 id="2-根据路径获取文件名"><a href="#2-根据路径获取文件名" class="headerlink" title="2.根据路径获取文件名"></a>2.根据路径获取文件名</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.path.dirname(path)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> list </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
